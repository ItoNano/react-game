{"version":3,"sources":["index.js"],"names":["Props","this","props","value","React","Component","Square","className","onClick","Board","state","squares","Array","fill","xIsNext","i","slice","calculateWinner","setState","handleClick","status","winner","renderSquare","Game","lines","length","a","b","c","ReactDOM","render","document","getElementById"],"mappings":"wNAIMA,E,4JACF,WACI,OAAO,8BAAMC,KAAKC,MAAMC,Y,GAFZC,IAAMC,WAO1B,SAASC,EAAOJ,GACZ,OACI,wBAAQK,UAAU,SAASC,QAASN,EAAMM,QAA1C,SACKN,EAAMC,Q,IAmBbM,E,kDACF,WAAYP,GAAQ,IAAD,8BACf,cAAMA,IACDQ,MAAQ,CACTC,QAASC,MAAM,GAAGC,KAAK,MACvBC,SAAS,GAJE,E,+CAOnB,SAAYC,GACR,IAAMJ,EAAUV,KAAKS,MAAMC,QAAQK,QAC/BC,EAAgBN,IAAYA,EAAQI,KAGxCJ,EAAQI,GAAKd,KAAKS,MAAMI,QAAU,IAAM,IACxCb,KAAKiB,SAAS,CACVP,QAASA,EACTG,SAAUb,KAAKS,MAAMI,a,0BAG7B,SAAaC,GAAI,IAAD,OACZ,OACI,cAACT,EAAD,CACIE,QAAS,WACL,EAAKW,YAAYJ,IAErBZ,MAAOF,KAAKS,MAAMC,QAAQI,O,oBAKtC,WACI,IACIK,EADEC,EAASJ,EAAgBhB,KAAKS,MAAMC,SAQ1C,OALIS,EADAC,EACS,WAAaA,EAEb,iBAAmBpB,KAAKS,MAAMI,QAAU,IAAM,KAIvD,gCACI,qBAAKP,UAAU,SAAf,SAAyBa,IACzB,sBAAKb,UAAU,YAAf,UACKN,KAAKqB,aAAa,GAClBrB,KAAKqB,aAAa,GAClBrB,KAAKqB,aAAa,MAEvB,sBAAKf,UAAU,YAAf,UACKN,KAAKqB,aAAa,GAClBrB,KAAKqB,aAAa,GAClBrB,KAAKqB,aAAa,MAEvB,sBAAKf,UAAU,YAAf,UACKN,KAAKqB,aAAa,GAClBrB,KAAKqB,aAAa,GAClBrB,KAAKqB,aAAa,a,GAvDnBlB,IAAMC,WA8DpBkB,E,4JACF,WACI,OACI,gCACI,sBAAKhB,UAAU,OAAf,UACI,qBAAKA,UAAU,aAAf,SACI,cAACE,EAAD,MAEJ,sBAAKF,UAAU,YAAf,UACI,wBACA,6BAGR,cAACP,EAAD,CAAOG,MAAO,uB,GAbXC,IAAMC,WAuBzB,SAASY,EAAgBN,GAWrB,IAVA,IAAMa,EAAQ,CACV,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAEFT,EAAI,EAAGA,EAAIS,EAAMC,OAAQV,IAAK,CACnC,kBAAkBS,EAAMT,GAAxB,GAAOW,EAAP,KAAUC,EAAV,KAAaC,EAAb,KACA,GAAIjB,EAAQe,IAAMf,EAAQe,KAAOf,EAAQgB,IAAMhB,EAAQe,KAAOf,EAAQiB,GAClE,OAAOjB,EAAQe,GAGvB,OAAO,KAnBXG,IAASC,OAAO,cAACP,EAAD,IAAUQ,SAASC,eAAe,W","file":"static/js/main.365571ff.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nclass Props extends React.Component {\n    render() {\n        return <div>{this.props.value}</div>;\n    }\n}\n\n// stateを使用しない、render機能のみを残したコンポーネント\nfunction Square(props) {\n    return (\n        <button className=\"square\" onClick={props.onClick}>\n            {props.value}\n        </button>\n    );\n}\n// class Square extends React.Component {\n//     render() {\n//         return (\n//             <button\n//                 className=\"square\"\n//                 onClick={() => {\n//                     this.props.onClick();\n//                 }}\n//             >\n//                 {this.props.value}\n//             </button>\n//         );\n//     }\n// }\n\nclass Board extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            squares: Array(9).fill(null),\n            xIsNext: true,\n        };\n    }\n    handleClick(i) {\n        const squares = this.state.squares.slice();\n        if (calculateWinner(squares) || squares[i]) {\n            return;\n        }\n        squares[i] = this.state.xIsNext ? 'X' : 'O';\n        this.setState({\n            squares: squares,\n            xIsNext: !this.state.xIsNext,\n        });\n    }\n    renderSquare(i) {\n        return (\n            <Square\n                onClick={() => {\n                    this.handleClick(i);\n                }}\n                value={this.state.squares[i]}\n            />\n        );\n    }\n\n    render() {\n        const winner = calculateWinner(this.state.squares);\n        let status;\n        if (winner) {\n            status = 'Winner: ' + winner;\n        } else {\n            status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\n        }\n\n        return (\n            <div>\n                <div className=\"status\">{status}</div>\n                <div className=\"board-row\">\n                    {this.renderSquare(0)}\n                    {this.renderSquare(1)}\n                    {this.renderSquare(2)}\n                </div>\n                <div className=\"board-row\">\n                    {this.renderSquare(3)}\n                    {this.renderSquare(4)}\n                    {this.renderSquare(5)}\n                </div>\n                <div className=\"board-row\">\n                    {this.renderSquare(6)}\n                    {this.renderSquare(7)}\n                    {this.renderSquare(8)}\n                </div>\n            </div>\n        );\n    }\n}\n\nclass Game extends React.Component {\n    render() {\n        return (\n            <div>\n                <div className=\"game\">\n                    <div className=\"game-board\">\n                        <Board />\n                    </div>\n                    <div className=\"game-info\">\n                        <div>{/* status */}</div>\n                        <ol>{/* TODO */}</ol>\n                    </div>\n                </div>\n                <Props value={'propsSample'} />\n            </div>\n        );\n    }\n}\n\n// ========================================\n\nReactDOM.render(<Game />, document.getElementById('root'));\n\nfunction calculateWinner(squares) {\n    const lines = [\n        [0, 1, 2],\n        [3, 4, 5],\n        [6, 7, 8],\n        [0, 3, 6],\n        [1, 4, 7],\n        [2, 5, 8],\n        [0, 4, 8],\n        [2, 4, 6],\n    ];\n    for (let i = 0; i < lines.length; i++) {\n        const [a, b, c] = lines[i];\n        if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n            return squares[a];\n        }\n    }\n    return null;\n}\n"],"sourceRoot":""}