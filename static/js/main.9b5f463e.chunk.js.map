{"version":3,"sources":["index.js"],"names":["Square","props","className","onClick","value","Board","i","this","squares","renderSquare","React","Component","ButtonArea","state","backStatus","goStatus","Game","history","Array","fill","stepNumber","xIsNext","bind","slice","length","calculateWinner","setState","concat","step","status","current","winner","moves","map","move","gameTitle","statusText","handleClick","lines","a","b","c","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9b5f463e.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nfunction Square(props) {\n    return (\n        <button className=\"square\" onClick={props.onClick}>\n            {props.value}\n        </button>\n    );\n}\n\nclass Board extends React.Component {\n    renderSquare(i) {\n        return <Square value={this.props.squares[i]} onClick={() => this.props.onClick(i)} />;\n    }\n\n    render() {\n        return (\n            <div className=\"boardWrapper\">\n                <div className=\"boardWrapper__row\">\n                    {this.renderSquare(0)}\n                    {this.renderSquare(1)}\n                    {this.renderSquare(2)}\n                </div>\n                <div className=\"boardWrapper__row\">\n                    {this.renderSquare(3)}\n                    {this.renderSquare(4)}\n                    {this.renderSquare(5)}\n                </div>\n                <div className=\"boardWrapper__row\">\n                    {this.renderSquare(6)}\n                    {this.renderSquare(7)}\n                    {this.renderSquare(8)}\n                </div>\n            </div>\n        );\n    }\n}\n\nclass ButtonArea extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n    }\n    render() {\n        return (\n            <div className=\"buttonArea\">\n                <div\n                    className=\"buttonArea__back\"\n                    onClick={() => {\n                        this.props.backStatus();\n                    }}\n                >\n                    戻る\n                </div>\n                <div\n                    className=\"buttonArea__go\"\n                    onClick={() => {\n                        this.props.goStatus();\n                    }}\n                >\n                    進む\n                </div>\n            </div>\n        );\n    }\n}\n\nclass Game extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            history: [\n                {\n                    squares: Array(9).fill(null),\n                },\n            ],\n            stepNumber: 0,\n            xIsNext: true,\n        };\n        this.backStatus = this.backStatus.bind(this);\n        this.goStatus = this.goStatus.bind(this);\n    }\n\n    handleClick(i) {\n        const history = this.state.history.slice(0, this.state.stepNumber + 1);\n        const current = history[history.length - 1];\n        const squares = current.squares.slice();\n        if (calculateWinner(squares) || squares[i]) {\n            return;\n        }\n        squares[i] = this.state.xIsNext ? 'X' : 'O';\n        this.setState({\n            history: history.concat([\n                {\n                    squares: squares,\n                },\n            ]),\n            stepNumber: history.length,\n            xIsNext: !this.state.xIsNext,\n        });\n    }\n\n    jumpTo(step) {\n        this.setState({\n            stepNumber: step,\n            xIsNext: step % 2 === 0,\n        });\n    }\n    statusText() {\n        return '次のプレイヤー';\n    }\n\n    backStatus() {\n        if (this.state.stepNumber !== 0) {\n            this.setState({\n                stepNumber: this.state.stepNumber - 1,\n                xIsNext: !this.state.xIsNext,\n            });\n        }\n    }\n    goStatus() {\n        if (this.state.stepNumber !== this.state.history.length - 1) {\n            this.setState({\n                stepNumber: this.state.stepNumber + 1,\n                xIsNext: !this.state.xIsNext,\n            });\n        }\n    }\n\n    render() {\n        const history = this.state.history;\n        const current = history[this.state.stepNumber];\n        const winner = calculateWinner(current.squares);\n\n        const moves = history.map((step, move) => {\n            const desc = move ? 'Go to move #' + move : 'Go to game start';\n            if (true) {\n                return (<div key={move}></div>)\n            } else {\n                return (\n                    <li key={move}>\n                        <button onClick={() => this.jumpTo(move)}>{desc}</button>\n                    </li>\n                );\n            }\n        });\n        const gameTitle = <div>マルバツゲーム</div>;\n\n        let status;\n        if (winner) {\n            status = 'Winner: ' + winner;\n        } else {\n            status = this.statusText() + (this.state.xIsNext ? 'X' : 'O');\n        }\n\n        return (\n            <div className=\"gameWrapper\">\n                {gameTitle}\n                <div className=\"gameWrapper__board\">\n                    <Board squares={current.squares} onClick={(i) => this.handleClick(i)} />\n                </div>\n                <div className=\"gameWrapper__info\">\n                    <div>{status}</div>\n                    <div>{moves}</div>\n                </div>\n                <ButtonArea backStatus={this.backStatus} goStatus={this.goStatus} />\n            </div>\n        );\n    }\n}\n\n// ========================================\n\nReactDOM.render(<Game />, document.getElementById('root'));\n\nfunction calculateWinner(squares) {\n    const lines = [\n        [0, 1, 2],\n        [3, 4, 5],\n        [6, 7, 8],\n        [0, 3, 6],\n        [1, 4, 7],\n        [2, 5, 8],\n        [0, 4, 8],\n        [2, 4, 6],\n    ];\n    for (let i = 0; i < lines.length; i++) {\n        const [a, b, c] = lines[i];\n        if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n            return squares[a];\n        }\n    }\n    return null;\n}\n"],"sourceRoot":""}